import { motion } from "framer-motion";
import { FaUsb, FaArrowLeft, FaArrowRight, FaHome, FaSdCard, FaCloud, FaPlusCircle, FaMinusCircle } from "react-icons/fa";
import { useNavigate, Link } from "react-router-dom";
import { FaFloppyDisk } from "react-icons/fa6";
import React, { useState, useEffect } from "react";

const content = {
    en: {
        home: "Home",
        title: "üì¶ Other Storage Types",
        subtitle: "Beyond the main hard drive, many other devices store our data. Let's explore them!",
        previous: "Previous",
        next: "Next",
        use_cases: "Use Cases:",
        pros: "Pros:",
        cons: "Cons:",
        storage_types: [
            {
                title: "Flash Drive (USB)",
                icon: <FaUsb className="text-blue-500" />,
                description: "A small, portable device that plugs into a USB port. The most common way to move files between computers.",
                pros: ["Very portable", "Easy to use", "Affordable"],
                cons: ["Easy to lose", "Can be broken", "Risk of viruses"],
                use_cases: ["Transferring documents", "Sharing photos", "Creating bootable installers"],
            },
            {
                title: "SD Card",
                icon: <FaSdCard className="text-orange-500" />,
                description: "A tiny memory card used in many digital devices like cameras, phones, and drones.",
                pros: ["Very small", "High capacity available", "Essential for many devices"],
                cons: ["Can be fragile", "Easy to lose", "Needs a card reader"],
                use_cases: ["Storing photos in a camera", "Expanding phone storage", "Recording video on a drone"],
            },
            {
                title: "Cloud Storage",
                icon: <FaCloud className="text-sky-500" />,
                description: "Storing your data online on servers instead of on your own device. Accessible from anywhere with internet.",
                pros: ["Access from anywhere", "Easy to share", "Automatic backups"],
                cons: ["Requires internet", "Can have monthly fees", "Privacy concerns"],
                use_cases: ["Google Drive for documents", "iCloud for phone backups", "Dropbox for file sharing"],
            },
            {
                title: "Floppy Disk (Historic)",
                icon: <FaFloppyDisk className="text-gray-500" />,
                description: "An old type of magnetic storage, famous for being the 'save' icon. It held very little data.",
                pros: ["Iconic!", "Helped start personal computing"],
                cons: ["Holds very little data (~1.44MB)", "Very slow", "Easily damaged"],
                use_cases: ["Saving small documents (in the 1990s)", "Distributing software (long ago)"],
            },
        ],
    },
    hi: {
        home: "‡§π‡•ã‡§Æ",
        title: "üì¶ ‡§Ö‡§®‡•ç‡§Ø ‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
        subtitle: "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§π‡§æ‡§∞‡•ç‡§° ‡§°‡•ç‡§∞‡§æ‡§á‡§µ ‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§ï‡§à ‡§Ö‡§®‡•ç‡§Ø ‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡•ã ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•Ä‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§á‡§è ‡§â‡§®‡§ï‡§æ ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç!",
        previous: "‡§™‡§ø‡§õ‡§≤‡§æ",
        next: "‡§Ö‡§ó‡§≤‡§æ",
        use_cases: "‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§Æ‡§æ‡§Æ‡§≤‡•á:",
        pros: "‡§´‡§æ‡§Ø‡§¶‡•á:",
        cons: "‡§®‡•Å‡§ï‡§∏‡§æ‡§®:",
        storage_types: [
            {
                title: "‡§´‡•ç‡§≤‡•à‡§∂ ‡§°‡•ç‡§∞‡§æ‡§á‡§µ (‡§Ø‡•Ç‡§è‡§∏‡§¨‡•Ä)",
                icon: <FaUsb className="text-blue-500" />,
                description: "‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ, ‡§™‡•ã‡§∞‡•ç‡§ü‡•á‡§¨‡§≤ ‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§ú‡•ã ‡§Ø‡•Ç‡§è‡§∏‡§¨‡•Ä ‡§™‡•ã‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§≤‡§ó ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§´‡§º‡§æ‡§á‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡§æ‡§Ç‡§§‡§∞‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§¨‡§∏‡•á ‡§Ü‡§Æ ‡§§‡§∞‡•Ä‡§ï‡§æ‡•§",
                pros: ["‡§¨‡§π‡•Å‡§§ ‡§™‡•ã‡§∞‡•ç‡§ü‡•á‡§¨‡§≤", "‡§â‡§™‡§Ø‡•ã‡§ó ‡§Æ‡•á‡§Ç ‡§Ü‡§∏‡§æ‡§®", "‡§∏‡§∏‡•ç‡§§‡§æ"],
                cons: ["‡§ñ‡•ã‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Ü‡§∏‡§æ‡§®", "‡§ü‡•Ç‡§ü ‡§∏‡§ï‡§§‡§æ ‡§π‡•à", "‡§µ‡§æ‡§Ø‡§∞‡§∏ ‡§ï‡§æ ‡§ñ‡§§‡§∞‡§æ"],
                use_cases: ["‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§∏‡•ç‡§•‡§æ‡§®‡§æ‡§Ç‡§§‡§∞‡§ø‡§§ ‡§ï‡§∞‡§®‡§æ", "‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞‡•á‡§Ç ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§®‡§æ", "‡§¨‡•Ç‡§ü‡•á‡§¨‡§≤ ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡§∞ ‡§¨‡§®‡§æ‡§®‡§æ"],
            },
            {
                title: "‡§è‡§∏‡§°‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§°",
                icon: <FaSdCard className="text-orange-500" />,
                description: "‡§ï‡•à‡§Æ‡§∞‡§æ, ‡§´‡•ã‡§® ‡§î‡§∞ ‡§°‡•ç‡§∞‡•ã‡§® ‡§ú‡•à‡§∏‡•á ‡§ï‡§à ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§â‡§™‡§ï‡§∞‡§£‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§π‡•ã‡§®‡•á ‡§µ‡§æ‡§≤‡§æ ‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ ‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§°‡•§",
                pros: ["‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡§æ", "‡§â‡§ö‡•ç‡§ö ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß", "‡§ï‡§à ‡§â‡§™‡§ï‡§∞‡§£‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï"],
                cons: ["‡§®‡§æ‡§ú‡•Å‡§ï ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ ‡§π‡•à", "‡§ñ‡•ã‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Ü‡§∏‡§æ‡§®", "‡§ï‡§æ‡§∞‡•ç‡§° ‡§∞‡•Ä‡§°‡§∞ ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•à"],
                use_cases: ["‡§ï‡•à‡§Æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞‡•á‡§Ç ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•Ä‡§§ ‡§ï‡§∞‡§®‡§æ", "‡§´‡•ã‡§® ‡§≠‡§Ç‡§°‡§æ‡§∞‡§£ ‡§ï‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§ï‡§∞‡§®‡§æ", "‡§°‡•ç‡§∞‡•ã‡§® ‡§™‡§∞ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡§®‡§æ"],
            },
            {
                title: "‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú",
                icon: <FaCloud className="text-sky-500" />,
                description: "‡§Ö‡§™‡§®‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§™‡§∞ ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•Ä‡§§ ‡§ï‡§∞‡§®‡§æ‡•§ ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡§π‡•Ä‡§Ç ‡§∏‡•á ‡§≠‡•Ä ‡§™‡§π‡•Å‡§Å‡§ö‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§",
                pros: ["‡§ï‡§π‡•Ä‡§Ç ‡§∏‡•á ‡§≠‡•Ä ‡§™‡§π‡•Å‡§Å‡§ö", "‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§®‡§æ ‡§Ü‡§∏‡§æ‡§®", "‡§∏‡•ç‡§µ‡§ö‡§æ‡§≤‡§ø‡§§ ‡§¨‡•à‡§ï‡§Ö‡§™"],
                cons: ["‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•à", "‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ ‡§π‡•à", "‡§ó‡•ã‡§™‡§®‡•Ä‡§Ø‡§§‡§æ ‡§ï‡•Ä ‡§ö‡§ø‡§Ç‡§§‡§æ"],
                use_cases: ["‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ó‡•Ç‡§ó‡§≤ ‡§°‡•ç‡§∞‡§æ‡§á‡§µ", "‡§´‡•ã‡§® ‡§¨‡•à‡§ï‡§Ö‡§™ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§à‡§ï‡•ç‡§≤‡§æ‡§â‡§°", "‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•ç‡§∞‡•â‡§™‡§¨‡•â‡§ï‡•ç‡§∏"],
            },
            {
                title: "‡§´‡•ç‡§≤‡•â‡§™‡•Ä ‡§°‡§ø‡§∏‡•ç‡§ï (‡§ê‡§§‡§ø‡§π‡§æ‡§∏‡§ø‡§ï)",
                icon: <FaFloppyDisk className="text-gray-500" />,
                description: "'‡§∏‡§π‡•á‡§ú‡•á‡§Ç' ‡§Ü‡§á‡§ï‡§® ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∏‡§ø‡§¶‡•ç‡§ß ‡§è‡§ï ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡§æ ‡§ö‡•Å‡§Ç‡§¨‡§ï‡•Ä‡§Ø ‡§≠‡§Ç‡§°‡§æ‡§∞‡§£‡•§ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§¨‡§π‡•Å‡§§ ‡§ï‡§Æ ‡§°‡•á‡§ü‡§æ ‡§π‡•ã‡§§‡§æ ‡§•‡§æ‡•§",
                pros: ["‡§™‡•ç‡§∞‡§§‡§ø‡§∑‡•ç‡§†‡§ø‡§§!", "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡•Ä"],
                cons: ["‡§¨‡§π‡•Å‡§§ ‡§ï‡§Æ ‡§°‡•á‡§ü‡§æ ‡§∞‡§ñ‡§§‡§æ ‡§π‡•à (~1.44MB)", "‡§¨‡§π‡•Å‡§§ ‡§ß‡•Ä‡§Æ‡§æ", "‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§ï‡•ç‡§∑‡§§‡§ø‡§ó‡•ç‡§∞‡§∏‡•ç‡§§"],
                use_cases: ["‡§õ‡•ã‡§ü‡•á ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§∏‡§π‡•á‡§ú‡§®‡§æ (1990 ‡§ï‡•á ‡§¶‡§∂‡§ï ‡§Æ‡•á‡§Ç)", "‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§µ‡§ø‡§§‡§∞‡§ø‡§§ ‡§ï‡§∞‡§®‡§æ (‡§¨‡§π‡•Å‡§§ ‡§™‡§π‡§≤‡•á)"],
            },
        ],
    }
};

const StorageCard = ({ type, t }) => (
    <motion.div
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true, amount: 0.3 }}
        transition={{ duration: 0.6 }}
        className="bg-white rounded-2xl shadow-lg p-6 flex flex-col"
    >
        <div className="flex items-center gap-4 mb-4">
            <div className="text-5xl">{type.icon}</div>
            <h3 className="text-2xl font-bold text-gray-800">{type.title}</h3>
        </div>
        <p className="text-gray-600 mb-4 flex-grow">{type.description}</p>

        <div className="space-y-3 text-sm">
            <div>
                <h4 className="font-semibold text-gray-700 mb-1">{t.use_cases}</h4>
                <ul className="list-disc list-inside space-y-1">
                    {type.use_cases.map((item, i) => <li key={i}>{item}</li>)}
                </ul>
            </div>
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 pt-2">
                <div>
                    <h4 className="font-semibold text-green-700 mb-1 flex items-center gap-1"><FaPlusCircle />{t.pros}</h4>
                    <ul className="list-disc list-inside text-green-600 space-y-1">
                        {type.pros.map((item, i) => <li key={i}>{item}</li>)}
                    </ul>
                </div>
                <div>
                    <h4 className="font-semibold text-red-700 mb-1 flex items-center gap-1"><FaMinusCircle />{t.cons}</h4>
                    <ul className="list-disc list-inside text-red-600 space-y-1">
                        {type.cons.map((item, i) => <li key={i}>{item}</li>)}
                    </ul>
                </div>
            </div>
        </div>
    </motion.div>
);

export default function OtherStorageTypes() {
    const [lang, setLang] = useState('en');
    const navigate = useNavigate();
    const t = content[lang];

      useEffect(() => {
                const handleKeyDown = (event) => {
                    if (event.ctrlKey && event.key === 'k') {
                        event.preventDefault();
                        setLang(prevLang => prevLang === 'en' ? 'hi' : 'en');
                    }
                };
                window.addEventListener('keydown', handleKeyDown);
                return () => window.removeEventListener('keydown', handleKeyDown);
            }, []);

    return (
        <div className="p-4 sm:p-6 lg:p-8 min-h-screen bg-gradient-to-br from-purple-50 to-blue-100 font-sans">
            <div className="w-full max-w-7xl mx-auto">
                <div className="flex items-center justify-between mb-8">
                    <Link to="/parts/prt1" className="inline-flex items-center px-4 py-2 bg-white rounded-full shadow-md border border-gray-200 hover:bg-gray-100 transition">
                        <FaHome className="mr-2 text-lg text-sky-600" />
                        {t.home}
                    </Link>
                    <div className="flex space-x-2">
                        <button
                            onClick={() => setLang("en")}
                            className={`px-3 py-1 rounded-lg border font-semibold ${lang === "en" ? "bg-sky-600 text-white border-sky-600" : "bg-white text-gray-700 border-gray-300"} transition`}>EN</button>
                        <button
                            onClick={() => setLang("hi")}
                            className={`px-3 py-1 rounded-lg border font-semibold ${lang === "hi" ? "bg-sky-600 text-white border-sky-600" : "bg-white text-gray-700 border-gray-300"} transition`}>‡§π‡§ø‡§Ç</button>
                    </div>
                </div>

                <header className="text-center mb-12">
                    <motion.h1 initial={{ opacity: 0, y: -20 }} animate={{ opacity: 1, y: 0 }} className="text-3xl sm:text-4xl lg:text-5xl font-extrabold text-purple-800">{t.title}</motion.h1>
                    <motion.p initial={{ opacity: 0, y: -20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 0.1 }} className="text-gray-600 mt-2 max-w-3xl mx-auto text-sm sm:text-base lg:text-lg">{t.subtitle}</motion.p>
                </header>

                <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    {t.storage_types.map((type, i) => (
                        <StorageCard key={i} type={type} t={t} />
                    ))}
                </div>

                <div className="w-full flex justify-between items-center mt-12 p-4 bg-gray-100 rounded-lg shadow-md">
                    <motion.button whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} onClick={() => navigate('/part1/tertiary-storage')} className="flex items-center gap-2 px-4 py-2 bg-purple-200 hover:bg-purple-300 text-purple-900 rounded-lg shadow transition"><FaArrowLeft />{t.previous}</motion.button>
                    <motion.button whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} onClick={() => navigate('/part1/ram-vs-rom')} className="flex items-center gap-2 px-4 py-2 bg-green-200 hover:bg-green-300 text-green-900 rounded-lg shadow transition">{t.next}<FaArrowRight /></motion.button>
                </div>
            </div>
        </div>
    );
}
