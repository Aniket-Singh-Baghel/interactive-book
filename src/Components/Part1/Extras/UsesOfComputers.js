import React, { useState, useRef, useEffect } from "react";
import { motion } from "framer-motion";
import {
    FaUniversity,
    FaHospital,
    FaBriefcase,
    FaMoneyBillWave,
    FaMusic,
    FaComments,
    FaFlask,
    FaHome,
    FaArrowLeft,
    FaArrowRight,
    FaRobot,
} from "react-icons/fa";
import { Link, useNavigate } from "react-router-dom";

// Multilingual content with 'key' for consistent icon mapping
const content = {
    en: {
        home: "Home",
        previous: "Previous",
        next: "Next",
        title: "Uses of Computers",
        subtitle: "Where and how computers help us in daily life",
        sections: [
            {
                key: "education",
                icon: "üéì",
                title: "Education",
                points: [
                    "Computers make learning **interactive** with **smart classrooms** and **digital boards**.",
                    "Access to **online courses**, **e-books**, and **digital libraries** anytime, anywhere.",
                    "**Virtual labs** and **simulation software** help students perform experiments safely.",
                    "Teachers use **projectors**, **tablets**, and **ICT tools** to explain concepts better.",
                ],
            },
            {
                key: "healthcare",
                icon: "üè•",
                title: "Healthcare",
                points: [
                    "**Patient records** and hospital data are stored securely in **databases**.",
                    "**MRI, CT Scans**, and **X-rays** depend on computer-controlled machines.",
                    "**Robotic surgeries** are guided by advanced computer systems.",
                    "**Telemedicine** and **real-time monitoring devices** connect doctors with patients remotely.",
                ],
            },
            {
                key: "business",
                icon: "üíº",
                title: "Business",
                points: [
                    "**Accounting software** and **ERP systems** manage company finances.",
                    "Companies use **video conferencing** and **emails** for global communication.",
                    "Large firms depend on **cloud platforms** and **servers** for data storage.",
                    "**ICT tools** help in **decision-making** with accurate reports and analysis.",
                ],
            },
            {
                key: "banking",
                icon: "üè¶",
                title: "Banking",
                points: [
                    "**ATMs** and **online banking systems** are fully computer-controlled.",
                    "**Core Banking Systems (CBS)** manage transactions across all branches.",
                    "**Internet banking** and **mobile apps** allow secure money transfers.",
                    "Computers detect **fraud** using **AI-powered security systems**.",
                    "Bank staff use **data servers** for customer records and financial reports.",
                ],
            },
            {
                key: "entertainment",
                icon: "üé∂",
                title: "Entertainment",
                points: [
                    "**Movies, music, and games** are powered by **multimedia software**.",
                    "Computers are used in **editing**, **animation**, and **special effects**.",
                    "**Virtual Reality (VR)** and **3D gaming** provide immersive experiences.",
                    "**Streaming platforms** like YouTube, Netflix rely on powerful computer servers.",
                ],
            },
            {
                key: "communication",
                icon: "üì±",
                title: "Communication",
                points: [
                    "**Instant messaging apps** and **emails** make fast communication possible.",
                    "**Video calls** and **conferencing** connect people worldwide.",
                    "**Social media platforms** depend on ICT networks and data centers.",
                    "**Mobile applications** are powered by **computer systems** behind the scenes.",
                ],
            },
            {
                key: "science",
                icon: "üî¨",
                title: "Science & Research",
                points: [
                    "**Supercomputers** perform **complex calculations** and data analysis.",
                    "**AI and Machine Learning** help in drug discovery and **climate studies**.",
                    "**Simulations** and **data visualization software** improve research accuracy.",
                    "**Space exploration** and **satellite launches** rely heavily on computers.",
                ],
            },
            {
                key: "analogy",
                icon: "ü§ñ",
                title: "Analogy: A Helpful Robot",
                points: [
                    "Think of a computer as a **super-fast robot** that follows your commands.",
                    "It can **remember** huge amounts of information, like a robot with a giant brain.",
                    "It **calculates** numbers in a flash, like a robot solving puzzles instantly.",
                    "It **connects** you to friends, just like a robot delivering messages anywhere in the world.",
                ],
            },
        ],
        conclusion:
            "Computers and ICT systems make education **smarter**, healthcare **safer**, business **faster**, banking **secure**, entertainment **richer**, communication **stronger**, and research **deeper**.",
    },

    hi: {
        home: "‡§π‡•ã‡§Æ",
        previous: "‡§™‡§ø‡§õ‡§≤‡§æ",
        next: "‡§Ö‡§ó‡§≤‡§æ",
        title: "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó",
        subtitle: "‡§π‡§Æ‡§æ‡§∞‡•á ‡§¶‡•à‡§®‡§ø‡§ï ‡§ú‡•Ä‡§µ‡§® ‡§Æ‡•á‡§Ç ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§ï‡§π‡§æ‡§Å ‡§î‡§∞ ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç",
        sections: [
            {
                key: "education",
                icon: "üéì",
                title: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
                points: [
                    "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§ï‡•ã **‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ** ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç, ‡§ú‡•à‡§∏‡•á **‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§ï‡•ç‡§≤‡§æ‡§∏‡§∞‡•Ç‡§Æ** ‡§î‡§∞ **‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§¨‡•ã‡§∞‡•ç‡§°**‡•§",
                    "**‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§ï‡•ã‡§∞‡•ç‡§∏**, **‡§à-‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡•á‡§Ç** ‡§î‡§∞ **‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§≤‡§æ‡§á‡§¨‡•ç‡§∞‡•á‡§∞‡•Ä** ‡§π‡§∞ ‡§∏‡§Æ‡§Ø ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§∞‡§π‡§§‡•Ä ‡§π‡•à‡§Ç‡•§",
                    "**‡§µ‡§∞‡•ç‡§ö‡•Å‡§Ö‡§≤ ‡§≤‡•à‡§¨‡•ç‡§∏** ‡§î‡§∞ **‡§∏‡§ø‡§Æ‡•Å‡§≤‡•á‡§∂‡§® ‡§∏‡•â‡§´‡§º‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞** ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï **‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü‡§∞**, **‡§ü‡•à‡§¨‡§≤‡•á‡§ü** ‡§î‡§∞ **ICT ‡§â‡§™‡§ï‡§∞‡§£‡•ã‡§Ç** ‡§∏‡•á ‡§¨‡•á‡§π‡§§‡§∞ ‡§™‡§¢‡§º‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                ],
            },
            {
                key: "healthcare",
                icon: "üè•",
                title: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø",
                points: [
                    "**‡§∞‡•ã‡§ó‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°** ‡§î‡§∞ ‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤ ‡§°‡•á‡§ü‡§æ **‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏** ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§∞‡§π‡§§‡§æ ‡§π‡•à‡•§",
                    "**MRI, CT ‡§∏‡•ç‡§ï‡•à‡§®** ‡§î‡§∞ **X-ray** ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§ø‡§§ ‡§Æ‡§∂‡•Ä‡§®‡•ã‡§Ç ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§π‡•à‡§Ç‡•§",
                    "**‡§∞‡•ã‡§¨‡•ã‡§ü‡§ø‡§ï ‡§∏‡§∞‡•ç‡§ú‡§∞‡•Ä** ‡§â‡§®‡•ç‡§®‡§§ ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç‡•§",
                    "**‡§ü‡•á‡§≤‡•Ä‡§Æ‡•á‡§°‡§ø‡§∏‡§ø‡§®** ‡§î‡§∞ **‡§∞‡•Ä‡§Ø‡§≤-‡§ü‡§æ‡§á‡§Æ ‡§°‡§ø‡§µ‡§æ‡§á‡§∏** ‡§°‡•â‡§ï‡•ç‡§ü‡§∞‡•ã‡§Ç ‡§î‡§∞ ‡§Æ‡§∞‡•Ä‡§ú‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Ç‡§∞ ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                ],
            },
            {
                key: "business",
                icon: "üíº",
                title: "‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞",
                points: [
                    "**‡§Ö‡§ï‡§æ‡§â‡§Ç‡§ü‡§ø‡§Ç‡§ó ‡§∏‡•â‡§´‡§º‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞** ‡§î‡§∞ **ERP ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ** ‡§ï‡§Ç‡§™‡§®‡•Ä ‡§ï‡•Ä ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ ‡§∏‡§Ç‡§≠‡§æ‡§≤‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•â‡§®‡•ç‡§´‡•ç‡§∞‡•á‡§Ç‡§∏‡§ø‡§Ç‡§ó** ‡§î‡§∞ **‡§à‡§Æ‡•á‡§≤** ‡§∏‡•á ‡§µ‡•à‡§∂‡•ç‡§µ‡§ø‡§ï ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§∏‡§Ç‡§≠‡§µ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§",
                    "**‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡§º‡•â‡§∞‡•ç‡§Æ** ‡§î‡§∞ **‡§∏‡§∞‡•ç‡§µ‡§∞** ‡§¨‡§°‡§º‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡•ã ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡§ø‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**ICT ‡§â‡§™‡§ï‡§∞‡§£** ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§î‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§®‡§ø‡§∞‡•ç‡§£‡§Ø ‡§≤‡•á‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                ],
            },
            {
                key: "banking",
                icon: "üè¶",
                title: "‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó",
                points: [
                    "**ATM ‡§Æ‡§∂‡•Ä‡§®‡•á‡§Ç** ‡§î‡§∞ **‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ** ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§π‡•à‡§Ç‡•§",
                    "**‡§ï‡•ã‡§∞ ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ (CBS)** ‡§∏‡§≠‡•Ä ‡§∂‡§æ‡§ñ‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó** ‡§î‡§∞ **‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§ê‡§™‡•ç‡§∏** ‡§∏‡•á ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§™‡•à‡§∏‡•á ‡§ï‡§æ ‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§",
                    "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ **‡§è‡§Ü‡§à ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ** ‡§∏‡•á **‡§ß‡•ã‡§ñ‡§æ‡§ß‡§°‡§º‡•Ä** ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "‡§¨‡•à‡§Ç‡§ï ‡§ï‡§∞‡•ç‡§Æ‡§ö‡§æ‡§∞‡•Ä **‡§°‡•á‡§ü‡§æ ‡§∏‡§∞‡•ç‡§µ‡§∞** ‡§∏‡•á ‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§î‡§∞ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§∏‡§Ç‡§≠‡§æ‡§≤‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**UPI ‡§î‡§∞ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§µ‡•â‡§≤‡•á‡§ü** ‡§Ü‡§ú ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§Æ‡•á‡§Ç ‡§∏‡§¨‡§∏‡•á ‡§§‡•á‡§ú‡§º ‡§î‡§∞ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä ‡§π‡•à‡•§",

                ],

            },
            {
                key: "entertainment",
                icon: "üé∂",
                title: "‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§®",
                points: [
                    "**‡§´‡§ø‡§≤‡•ç‡§Æ‡•á‡§Ç, ‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§î‡§∞ ‡§ó‡•á‡§Æ‡•ç‡§∏** **‡§Æ‡§≤‡•ç‡§ü‡•Ä‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§∏‡•â‡§´‡§º‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞** ‡§∏‡•á ‡§ö‡§≤‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ **‡§è‡§°‡§ø‡§ü‡§ø‡§Ç‡§ó**, **‡§è‡§®‡•Ä‡§Æ‡•á‡§∂‡§®** ‡§î‡§∞ **‡§∏‡•ç‡§™‡•á‡§∂‡§≤ ‡§á‡§´‡•á‡§ï‡•ç‡§ü‡•ç‡§∏** ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§µ‡§∞‡•ç‡§ö‡•Å‡§Ö‡§≤ ‡§∞‡§ø‡§Ø‡§≤‡§ø‡§ü‡•Ä (VR)** ‡§î‡§∞ **3D ‡§ó‡•á‡§Æ‡§ø‡§Ç‡§ó** ‡§∞‡•ã‡§Æ‡§æ‡§Ç‡§ö‡§ï ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ç‡§ó ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡§º‡•â‡§∞‡•ç‡§Æ** (‡§Ø‡•Ç‡§ü‡•ç‡§Ø‡•Ç‡§¨, ‡§®‡•á‡§ü‡§´‡•ç‡§≤‡§ø‡§ï‡•ç‡§∏) ‡§∂‡§ï‡•ç‡§§‡§ø‡§∂‡§æ‡§≤‡•Ä ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§™‡§∞ ‡§ö‡§≤‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                ],
            },
            {
                key: "communication",
                icon: "üì±",
                title: "‡§∏‡§Ç‡§ö‡§æ‡§∞",
                points: [
                    "**‡§Æ‡•à‡§∏‡•á‡§ú‡§ø‡§Ç‡§ó ‡§ê‡§™‡•ç‡§∏** ‡§î‡§∞ **‡§à‡§Æ‡•á‡§≤** ‡§§‡•á‡§ú‡§º ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•â‡§≤** ‡§î‡§∞ **‡§ï‡§æ‡§Ç‡§´‡•ç‡§∞‡•á‡§Ç‡§∏‡§ø‡§Ç‡§ó** ‡§∏‡•á ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ú‡•Å‡§°‡§º‡•Ä ‡§∞‡§π‡§§‡•Ä ‡§π‡•à‡•§",
                    "**‡§∏‡•ã‡§∂‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡§º‡•â‡§∞‡•ç‡§Æ** ICT ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§π‡•à‡§Ç‡•§",
                    "**‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§ê‡§™‡•ç‡§∏** ‡§ï‡•á ‡§™‡•Ä‡§õ‡•á **‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ** ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                ],
            },
            {
                key: "science",
                icon: "üî¨",
                title: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§î‡§∞ ‡§Ö‡§®‡•Å‡§∏‡§Ç‡§ß‡§æ‡§®",
                points: [
                    "**‡§∏‡•Å‡§™‡§∞‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞** ‡§ú‡§ü‡§ø‡§≤ ‡§ó‡§£‡§®‡§æ‡§è‡§Å ‡§î‡§∞ **‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£** ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§è‡§Ü‡§à ‡§î‡§∞ ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§®‡§à ‡§¶‡§µ‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§î‡§∞ **‡§ú‡§≤‡§µ‡§æ‡§Ø‡•Å ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§®** ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§∏‡§ø‡§Æ‡•Å‡§≤‡•á‡§∂‡§®** ‡§î‡§∞ **‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡§º‡•Å‡§Ö‡§≤‡§æ‡§á‡§ú‡•á‡§∂‡§® ‡§∏‡•â‡§´‡§º‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞** ‡§Ö‡§®‡•Å‡§∏‡§Ç‡§ß‡§æ‡§® ‡§ï‡•Ä ‡§∏‡§ü‡•Ä‡§ï‡§§‡§æ ‡§¨‡§¢‡§º‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§",
                    "**‡§Ö‡§Ç‡§§‡§∞‡§ø‡§ï‡•ç‡§∑ ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£** ‡§î‡§∞ **‡§â‡§™‡§ó‡•ç‡§∞‡§π ‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡§£** ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§π‡•à‡§Ç‡•§",
                ],
            },
            {
                key: "analogy",
                icon: "ü§ñ",
                title: "‡§∏‡§æ‡§¶‡•É‡§∂‡•ç‡§Ø: ‡§è‡§ï ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§∞‡•ã‡§¨‡•ã‡§ü",
                points: [
                    "‡§è‡§ï ‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§ï‡•ã ‡§è‡§ï **‡§∏‡•Å‡§™‡§∞-‡§´‡§æ‡§∏‡•ç‡§ü ‡§∞‡•ã‡§¨‡•ã‡§ü** ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§∏‡•ã‡§ö‡•á‡§Ç ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•á ‡§Ü‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§",
                    "‡§Ø‡§π ‡§è‡§ï ‡§µ‡§ø‡§∂‡§æ‡§≤ ‡§Æ‡§∏‡•ç‡§§‡§ø‡§∑‡•ç‡§ï ‡§µ‡§æ‡§≤‡•á ‡§∞‡•ã‡§¨‡•ã‡§ü ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§¨‡§°‡§º‡•Ä ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä **‡§Ø‡§æ‡§¶ ‡§∞‡§ñ** ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§",
                    "‡§Ø‡§π ‡§è‡§ï ‡§´‡•ç‡§≤‡•à‡§∂ ‡§Æ‡•á‡§Ç ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•Ä **‡§ó‡§£‡§®‡§æ ‡§ï‡§∞‡§§‡§æ** ‡§π‡•à, ‡§ú‡•à‡§∏‡•á ‡§è‡§ï ‡§∞‡•ã‡§¨‡•ã‡§ü ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§™‡§π‡•á‡§≤‡§ø‡§Ø‡§æ‡§Å ‡§∏‡•Å‡§≤‡§ù‡§æ‡§§‡§æ ‡§π‡•à‡•§",
                    "‡§Ø‡§π ‡§Ü‡§™‡§ï‡•ã ‡§¶‡•ã‡§∏‡•ç‡§§‡•ã‡§Ç ‡§∏‡•á **‡§ú‡•ã‡§°‡§º‡§§‡§æ** ‡§π‡•à, ‡§†‡•Ä‡§ï ‡§â‡§∏‡•Ä ‡§§‡§∞‡§π ‡§ú‡•à‡§∏‡•á ‡§è‡§ï ‡§∞‡•ã‡§¨‡•ã‡§ü ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Ç ‡§ï‡§π‡•Ä‡§Ç ‡§≠‡•Ä ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§™‡§π‡•Å‡§Ç‡§ö‡§æ‡§§‡§æ ‡§π‡•à‡•§",
                ],
            },
        ],
        conclusion:
            "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§î‡§∞ ICT ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§ï‡•ã **‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü**, ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•ã **‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§**, ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞ ‡§ï‡•ã **‡§§‡•á‡§ú‡§º**, ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó ‡§ï‡•ã **‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§**, ‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§® ‡§ï‡•ã **‡§∏‡§Æ‡•É‡§¶‡•ç‡§ß**, ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§ï‡•ã **‡§Æ‡§ú‡§¨‡•Ç‡§§** ‡§î‡§∞ ‡§Ö‡§®‡•Å‡§∏‡§Ç‡§ß‡§æ‡§® ‡§ï‡•ã **‡§ó‡§π‡§∞‡§æ** ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§",
    },
};

// Map keys to icons (consistent across languages)
const iconMap = {
    education: FaUniversity,
    healthcare: FaHospital,
    business: FaBriefcase,
    banking: FaMoneyBillWave,
    entertainment: FaMusic,
    communication: FaComments,
    science: FaFlask,
    analogy: FaRobot,
};

// Motion variants
const cardVariant = {
    hidden: { opacity: 0, y: 12 },
    visible: { opacity: 1, y: 0, transition: { type: "spring", stiffness: 110, damping: 14 } },
};
const listVariants = {
    hidden: {},
    visible: { transition: { staggerChildren: 0.09 } },
};
const itemVariant = {
    hidden: { opacity: 0, x: -18 },
    visible: { opacity: 1, x: 0, transition: { type: "spring", stiffness: 140 } },
};

// Simple parser to convert **bold** into <strong>
function renderWithBold(text) {
    if (!text) return null;
    const parts = text.split(/(\*\*.*?\*\*)/g);
    return parts.map((part, i) => {
        const m = part.match(/^\*\*(.*)\*\*$/);
        if (m) return (
            <strong key={i} className="font-semibold text-indigo-600">
                {m[1]}
            </strong>
        );
        return <span key={i}>{part}</span>;
    });
}

export default function UsesOfComputersComponent() {
    const [lang, setLang] = useState("en");
    const navigate = useNavigate();
    const t = content[lang];
    const { title, subtitle, sections, conclusion } = t;
    const pdfRef = useRef();

    useEffect(() => {
        const handleKeyDown = (event) => {
            if (event.ctrlKey && event.key === 'k') {
                event.preventDefault();
                setLang(prevLang => prevLang === 'en' ? 'hi' : 'en');
            }
        };
        window.addEventListener('keydown', handleKeyDown);
        return () => window.removeEventListener('keydown', handleKeyDown);
    }, []);

    return (
        <div className="p-4 sm:p-6 lg:p-8 min-h-screen bg-gradient-to-br from-blue-50 to-green-50 font-sans">
            <div className="max-w-5xl mx-auto" ref={pdfRef}>
                <div className="flex items-center justify-between mb-8">
                    <Link to="/parts/prt1" className="inline-flex items-center px-4 py-2 bg-white rounded-full shadow-md border border-gray-200 hover:bg-gray-100 transition">
                        <FaHome className="mr-2 text-lg text-sky-600" />
                        {t.home}
                    </Link>
                    <div className="flex space-x-2">
                        <button onClick={() => setLang("en")} className={`px-3 py-1 rounded-lg border font-semibold ${lang === "en" ? "bg-sky-600 text-white border-sky-600" : "bg-white text-gray-700 border-gray-300"} transition`}>EN</button>
                        <button onClick={() => setLang("hi")} className={`px-3 py-1 rounded-lg border font-semibold ${lang === "hi" ? "bg-sky-600 text-white border-sky-600" : "bg-white text-gray-700 border-gray-300"} transition`}>‡§π‡§ø‡§Ç</button>
                    </div>
                </div>

                <div className="relative rounded-3xl overflow-hidden bg-white shadow-2xl p-8 md:p-12 text-center">
                    {/* Decorative animated SVG - subtle organic blobs and drifting circles */}
                    <motion.div
                        aria-hidden
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 0.55 }}
                        transition={{ duration: 1 }}
                        className="absolute inset-0 -z-10"
                    >
                        <svg className="w-full h-full" preserveAspectRatio="none" viewBox="0 0 800 300" xmlns="http://www.w3.org/2000/svg">
                            <defs>
                                <linearGradient id="g1" x1="0" x2="1">
                                    <stop offset="0%" stopColor="#eef2ff" />
                                    <stop offset="100%" stopColor="#eefaf6" />
                                </linearGradient>
                            </defs>
                            <motion.path
                                d="M0 120 C150 10 350 230 800 80 L800 300 L0 300 Z"
                                fill="url(#g1)"
                                initial={{ pathLength: 0 }}
                                animate={{ pathLength: [0, 1] }}
                                transition={{ duration: 1.2 }}
                            />
                            <motion.circle
                                cx="120"
                                cy="40"
                                r="18"
                                animate={{ y: [0, -8, 0], opacity: [0.7, 1, 0.7] }}
                                transition={{ repeat: Infinity, duration: 4 }}
                                fill="#e9d5ff"
                            />
                            <motion.circle
                                cx="700"
                                cy="60"
                                r="12"
                                animate={{ y: [0, 6, 0], opacity: [0.6, 1, 0.6] }}
                                transition={{ repeat: Infinity, duration: 3.6 }}
                                fill="#dcfce7"
                            />
                        </svg>
                    </motion.div>

                    <motion.h1
                        initial={{ opacity: 0, y: -6, scale: 0.98 }}
                        animate={{ opacity: 1, y: 0, scale: 1 }}
                        transition={{ duration: 0.6 }}
                        className="text-3xl sm:text-4xl font-extrabold tracking-tight text-slate-900"
                    >
                        {title}
                    </motion.h1>
                    <motion.p
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        transition={{ delay: 0.12 }}
                        className="mt-2 text-slate-600 max-w-xl mx-auto"
                    >
                        {subtitle}
                    </motion.p>
                </div>

                {/* CARDS GRID */}
                <div className="mt-8 grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
                    {sections.map((sec, idx) => {
                        const Icon = iconMap[sec.key] || FaUniversity;
                        return (
                            <motion.article
                                key={sec.title + idx}
                                variants={cardVariant}
                                initial="hidden"
                                whileInView="visible"
                                viewport={{ once: true, amount: 0.12 }}
                                whileHover={{ scale: 1.05, y: -5, boxShadow: "0px 10px 20px rgba(0,0,0,0.1)" }}
                                className="relative bg-white rounded-2xl p-6 shadow-md transition-all"
                            >
                                <div className="flex items-start gap-4">
                                    <motion.div
                                        className="flex-none w-14 h-14 rounded-lg bg-indigo-50/70 flex items-center justify-center ring-1 ring-indigo-100"
                                        animate={{ y: [0, -6, 0] }}
                                        transition={{ repeat: Infinity, duration: 4.2, ease: "easeInOut" }}
                                    >
                                        <Icon className="w-6 h-6 text-indigo-600" />
                                    </motion.div>

                                    <div className="min-w-0 flex-1">
                                        <h3 className="text-lg font-semibold text-slate-900 flex items-center gap-2">
                                            {sec.title} <span className="text-xl">{sec.icon}</span>
                                        </h3>
                                        <motion.ul
                                            initial="hidden"
                                            whileInView="visible"
                                            variants={listVariants}
                                            viewport={{ once: true, amount: 0.2 }}
                                            className="mt-3 space-y-2 text-slate-700 text-sm"
                                        >
                                            {sec.points.map((pt, i) => (
                                                <motion.li
                                                    key={i}
                                                    variants={itemVariant}
                                                    className="flex items-start gap-3"
                                                >
                                                    <div className="mt-1 text-indigo-600 font-bold">‚Ä¢</div>
                                                    <div className="leading-relaxed">{renderWithBold(pt)}</div>
                                                </motion.li>
                                            ))}
                                        </motion.ul>
                                    </div>
                                </div>
                            </motion.article>
                        );
                    })}
                </div>

                {/* CONCLUSION / CTA */}
                <motion.div
                    initial={{ opacity: 0, y: 8 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    className="mt-10 rounded-2xl bg-gradient-to-r from-indigo-50/40 to-white p-6 flex flex-col sm:flex-row items-center justify-between gap-4"
                >
                    <div className="text-slate-900 font-semibold text-sm sm:text-base">{renderWithBold(conclusion)}</div>
                </motion.div>
            </div>
            <div className="w-full flex justify-between items-center mt-10 p-4 bg-gray-100 rounded-lg shadow-md">
                <button
                    onClick={() => navigate('/part1/what-is-computer')}
                    className="flex items-center gap-2 px-4 py-2 bg-purple-200 hover:bg-purple-300 text-purple-900 rounded-lg shadow transition"
                >
                    <FaArrowLeft />
                    {t.previous}
                </button>
                <button
                    onClick={() => navigate('/part1/computer-hardware')}
                    className="flex items-center gap-2 px-4 py-2 bg-green-200 hover:bg-green-300 text-green-900 rounded-lg shadow transition"
                >
                    {t.next}
                    <FaArrowRight />
                </button>
            </div>
        </div>
    );
}
