import React, { useState } from "react";
import { motion } from "framer-motion";
import {
  FaGlobe,
  FaEnvelope,
  FaServer,
  FaLaptop,
  FaCloud,
  FaArrowRight,
  FaInfoCircle,
  FaPlay,
  FaPause,
} from "react-icons/fa";

// Chapter 1: What is the Internet?
// Single-file React component designed for TailwindCSS + Framer Motion + react-icons
// Positive, light theme, interactive 'live simulation' built with simple state & animations.

export default function Chapter1WhatIsInternet() {
  const [packetRunning, setPacketRunning] = useState(false);
  const [speed, setSpeed] = useState(1); // 0.5 (slow) - 2 (fast)
  const [showGlossary, setShowGlossary] = useState(false);
  const [activeTerm, setActiveTerm] = useState(null);
  const [quizAnswer, setQuizAnswer] = useState(null);
  const [quizResult, setQuizResult] = useState(null);

  const glossary = [
    {
      term: "IP Address",
      short: "рдХрд┐рд╕реА рднреА рдбрд┐рд╡рд╛рдЗрд╕ рдХрд╛ рд╡рд┐рд╢рд┐рд╖реНрдЯ рдкрддрд╛ред",
      long:
        "IP Address рдПрдХ рдЕрдиреВрдард╛ рдирдВрдмрд░ рд╣реЛрддрд╛ рд╣реИ рдЬреЛ рд╣рд░ рдЗрдВрдЯрд░рдиреЗрдЯ-рд╕рдВрдмрдВрдзрд┐рдд рдбрд┐рд╡рд╛рдЗрд╕ рдХреЛ рджрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ тАФ рдЬреИрд╕реЗ рдШрд░ рдХрд╛ рдкрддрд╛ред",
    },
    {
      term: "Server",
      short: "рдбреЗрдЯрд╛ рдФрд░ рд╕реЗрд╡рд╛рдУрдВ рдХреЛ рд╣реЛрд╕реНрдЯ рдХрд░рдиреЗ рд╡рд╛рд▓рд╛ рдХрдВрдкреНрдпреВрдЯрд░ред",
      long:
        "Server рд╡рд╣ рдХрдВрдкреНрдпреВрдЯрд░ рд╣реИ рдЬреЛ рд╡реЗрдмрд╕рд╛рдЗрдЯ, рд╡реАрдбрд┐рдпреЛ рдпрд╛ рдлрд╛рдЗрд▓ рдЬреИрд╕реА рдЪреАрдЬрд╝реЛрдВ рдХреЛ рд╕реНрдЯреЛрд░ рдХрд░рддрд╛ рд╣реИ рдФрд░ рдЬрд░реВрд░рдд рдкрдбрд╝рдиреЗ рдкрд░ рджреВрд╕рд░реЛрдВ рдХреЛ рднреЗрдЬрддрд╛ рд╣реИред",
    },
    {
      term: "Client",
      short: "рд╕реЗрд╡рд╛ рдорд╛рдВрдЧрдиреЗ рд╡рд╛рд▓рд╛ рдбрд┐рд╡рд╛рдЗрд╕ (рдЖрдкрдХрд╛ рдлреЛрди/рд▓реИрдкрдЯреЙрдк)ред",
      long:
        "Client рд╡реЛ рдбрд┐рд╡рд╛рдЗрд╕ рд╣реИ рдЬреЛ рдХрд┐рд╕реА рд╕рд░реНрд╡рд░ рд╕реЗ рдХреБрдЫ рдорд╛рдБрдЧрддрд╛ рд╣реИ тАФ рдЙрджрд╛рд╣рд░рдг: рдЬрдм рдЖрдк рдмреНрд░рд╛рдЙрдЬрд╝рд░ рдореЗрдВ рдХреЛрдИ рд╡реЗрдмрд╕рд╛рдЗрдЯ рдЦреЛрд▓рддреЗ рд╣реИрдВред",
    },
    {
      term: "DNS",
      short: "рдбреЛрдореЗрди рдирд╛рдо рд╕рд┐рд╕реНрдЯрдо тАФ рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреЗ рдирд╛рдо рдХреЛ IP рдореЗрдВ рдмрджрд▓рддрд╛ рд╣реИред",
      long:
        "DNS рдПрдХ рддрд░рд╣ рдХреА рдлреЛрдирдмреБрдХ рд╣реИ рдЬреЛ рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХреЗ рдирд╛рдо (рдЬреИрд╕реЗ example.com) рдХреЛ рдЙрдирдХреЗ IP рдкрддреЗ рдореЗрдВ рдмрджрд▓ рджреЗрддреА рд╣реИ рддрд╛рдХрд┐ рдмреНрд░рд╛рдЙрдЬрд╝рд░ рдЬрд╛рди рд╕рдХреЗ рдХрд╣рд╛рдБ рдЬрд╛рдирд╛ рд╣реИред",
    },
    {
      term: "Packet",
      short: "рдбреЗрдЯрд╛ рдХрд╛ рдПрдХ рдЫреЛрдЯрд╛ рдЯреБрдХрдбрд╝рд╛ред",
      long:
        "рдХрд┐рд╕реА рдмрдбрд╝реА рдлрд╛рдЗрд▓ рдпрд╛ рд╕рдВрджреЗрд╢ рдХреЛ рдЫреЛрдЯреЗ-рдЫреЛрдЯреЗ рд╣рд┐рд╕реНрд╕реЛрдВ (packets) рдореЗрдВ рдмрд╛рдВрдЯрд╛ рдЬрд╛рддрд╛ рд╣реИ рддрд╛рдХрд┐ рд╡реЗ рдЕрд▓рдЧ-рдЕрд▓рдЧ рд░рд╛рд╕реНрддреЛрдВ рд╕реЗ рддреЗрдЬреА рд╕реЗ рдФрд░ рд╕реБрд░рдХреНрд╖рд┐рдд рддрд░реАрдХреЗ рд╕реЗ рдкрд╣реБрдБрдЪ рд╕рдХреЗрдВред",
    },
  ];

  const startSimulation = () => {
    setPacketRunning(true);
    setQuizResult(null);
  };

  const stopSimulation = () => {
    setPacketRunning(false);
  };

  const toggleGlossary = () => setShowGlossary((s) => !s);

  const submitQuiz = () => {
    const correct = quizAnswer === "b";
    setQuizResult(correct ? "рд╕рд╣реА! ЁЯОЙ IP рдкрддрд╛ рдПрдХ рд╡рд┐рд╢реЗрд╖ рдкрддрд╛ рд╣реИред" : "рдЧрд▓рдд тАФ рд╕рд╣реА рдЙрддреНрддрд░: (b) IP Addressред");
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-white to-sky-50 p-6 text-gray-800">
      <div className="max-w-5xl mx-auto">
        {/* Header */}
        <header className="flex items-center gap-4 mb-6">
          <div className="p-3 rounded-lg bg-white shadow-md">
            <FaGlobe className="text-3xl text-sky-500" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-extrabold text-sky-700">What is the Internet?</h1>
            <p className="text-sm text-sky-600 mt-1">Concept: A global network of connected computers.</p>
            <p className="text-sm text-sky-600">Analogy: A giant, worldwide postal system for digital information.</p>
          </div>
        </header>

        {/* Intro Card */}
        <section className="bg-white rounded-2xl p-6 shadow-lg mb-6">
          <p className="text-lg leading-relaxed">
            рдЗрдВрдЯрд░рдиреЗрдЯ рдЕрд╕рд▓ рдореЗрдВ рдмрд╣реБрдд-рд╕реА рдЫреЛрдЯреА-рдЫреЛрдЯреА рдиреЗрдЯрд╡рд░реНрдХреНрд╕ рдХрд╛ рдПрдХ рдмрдбрд╝рд╛ рдЬрд╛рд▓ рд╣реИ тАФ рдпрд╣ рдмрд┐рд▓рдХреБрд▓ рд╡реИрд╕реЗ рд╣реА рд╣реИ рдЬреИрд╕реЗ рдЖрдкрдХреЗ рд╢рд╣рд░
            рдХреЗ рд╕рд╛рд░реЗ рд░рд╛рд╕реНрддреЗ рдПрдХ рджреВрд╕рд░реЗ рд╕реЗ рдЬреБрдбрд╝реЗ рд╣реБрдП рд╣реИрдВред
          </p>

          <div className="mt-4 grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="p-4 bg-sky-50 rounded-lg">
              <h3 className="font-semibold text-sky-700">рдиреАрдВрд╡</h3>
              <p className="text-sm">рдХрдВрдкреНрдпреВрдЯрд░ рдФрд░ рд╕рд░реНрд╡рд░ рдЬреЛ рдЖрдкрд╕ рдореЗрдВ рдЬреБрдбрд╝реЗ рд╣реЛрддреЗ рд╣реИрдВред</p>
            </div>
            <div className="p-4 bg-sky-50 rounded-lg">
              <h3 className="font-semibold text-sky-700">рд░рд╛рд╕реНрддреЗ</h3>
              <p className="text-sm">рддрд╛рд░реЗрдВ, рдХреЗрдмрд▓ рдФрд░ рд╡рд╛рдпрд░рд▓реЗрд╕ рд╕рд┐рдЧреНрдирд▓ рдЬреЛ рдбрд╛рдЯрд╛ рдХреЛ рд▓реЗ рдЬрд╛рддреЗ рд╣реИрдВред</p>
            </div>
            <div className="p-4 bg-sky-50 rounded-lg">
              <h3 className="font-semibold text-sky-700">рдирд┐рдпрдо</h3>
              <p className="text-sm">IP, DNS, рдФрд░ рдирд┐рдпрдо рдЬреЛ рдбрд╛рдЯрд╛ рдХреЗ рдЖрджрд╛рди-рдкреНрд░рджрд╛рди рдХреЛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░рддреЗ рд╣реИрдВред</p>
            </div>
          </div>
        </section>

        {/* Analogy Section */}
        <section className="mb-6">
          <motion.div
            initial={{ opacity: 0, y: 8 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.4 }}
            className="bg-white rounded-2xl p-6 shadow-md"
          >
            <h2 className="text-xl font-bold text-sky-700 mb-3">Analogy тАФ The Global Postal System</h2>
            <p className="leading-relaxed">
              рдХрд▓реНрдкрдирд╛ рдХреАрдЬрд┐рдП рдХрд┐ рдЖрдк рдХрд┐рд╕реА рджреЛрд╕реНрдд рдХреЛ рдЪрд┐рдЯреНрдареА рднреЗрдЬрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВред рдЖрдк рдЙрд╕реЗ рдПрдХ рдкрддрд╛ рд▓рд┐рдЦрддреЗ рд╣реИрдВ, рдФрд░ рдкреЛрд╕реНрдЯ рдСрдлрд┐рд╕
              рдЙрд╕ рдЪрд┐рдЯреНрдареА рдХреЛ рдЫреЛрдЯрд╛-рдЫреЛрдЯрд╛ рдХрд░ рдХреЗ рд╡рд┐рднрд┐рдиреНрди рд░рд╛рд╕реНрддреЛрдВ рд╕реЗ рднреЗрдЬрддрд╛ рд╣реИтАФрд╕рдбрд╝рдХреЗрдВ, рдЧрд╛рдбрд╝реА, рд╡рд┐рдорд╛рдиред рдЗрдВрдЯрд░рдиреЗрдЯ рдореЗрдВ рднреА рдпрд╣реА рд╣реЛрддрд╛ рд╣реИ:
              рдЖрдкрдХрд╛ рд╕рдВрджреЗрд╢ (рдпрд╛ рдлрд╝рд╛рдЗрд▓) рдЫреЛрдЯреЗ рдкреИрдХреЗрдЯреНрд╕ рдореЗрдВ рдЯреВрдЯрддрд╛ рд╣реИ рдФрд░ рдХрдИ рд░рд╛рд╕реНрддреЛрдВ рд╕реЗ рдПрдХ рд╕рд╛рде рднреЗрдЬрд╛ рдЬрд╛рддрд╛ рд╣реИред
            </p>

            <div className="mt-4 p-4 bg-sky-50 rounded-lg flex items-center gap-4">
              <FaEnvelope className="text-2xl text-sky-500" />
              <div>
                <div className="text-sm font-semibold">рдЪрд┐рдЯреНрдареА тЖТ рдкреИрдХреЗрдЯ</div>
                <div className="text-xs text-gray-600">рдмрдбрд╝реА рд╕рд╛рдордЧреНрд░реА рдХреЛ рдЫреЛрдЯреЗ рдкреИрдХреЗрдЯреНрд╕ рдореЗрдВ рддреЛрдбрд╝рдирд╛</div>
              </div>
            </div>
          </motion.div>
        </section>

        {/* Live Simulation */}
        <section className="mb-6">
          <div className="bg-white rounded-2xl p-6 shadow-lg">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-bold text-sky-700">Live Simulation тАФ Send a Packet</h3>

              <div className="flex items-center gap-2">
                <button
                  onClick={() => (packetRunning ? stopSimulation() : startSimulation())}
                  className="inline-flex items-center gap-2 px-3 py-2 bg-sky-600 text-white rounded-lg shadow hover:bg-sky-700"
                >
                  {packetRunning ? <FaPause /> : <FaPlay />}
                  <span>{packetRunning ? "Pause" : "Start"}</span>
                </button>

                <div className="flex items-center gap-2 bg-sky-50 rounded-lg px-3 py-2">
                  <label className="text-sm text-sky-600">Speed</label>
                  <input
                    type="range"
                    min={0.5}
                    max={2}
                    step={0.1}
                    value={speed}
                    onChange={(e) => setSpeed(Number(e.target.value))}
                    className="w-32"
                  />
                </div>
              </div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 items-center">
              {/* left: explanation */}
              <div>
                <h4 className="font-semibold text-sky-700 mb-2">рдХреНрдпрд╛ рд╣реЛ рд░рд╣рд╛ рд╣реИ?</h4>
                <p className="text-sm leading-relaxed">
                  рдирд┐рдЪреЗ рдХреА рдбрд╛рдпрдЧреНрд░рд╛рдо рдореЗрдВ, <span className="font-semibold">Laptop</span> рд╕реЗ рдПрдХ рдкреИрдХреЗрдЯ рднреЗрдЬрд╛ рдЬрд╛рдПрдЧрд╛ тАФ
                  рд╡рд╣ рдкреИрдХреЗрдЯ рд░рд╛рдЙрдЯрд░ рдФрд░ рд╕рд░реНрд╡рд░ рд╕реЗ рдЧреБрдЬрд░реЗрдЧрд╛ рдФрд░ рдЕрдВрдд рдореЗрдВ <span className="font-semibold">Globe</span> рдкрд░ рдкрд╣реБрдБрдЪреЗрдЧрд╛ред
                  рдЖрдк рд╕реНрдЯрд╛рд░реНрдЯ рджрдмрд╛рдХрд░ рдкреИрдХреЗрдЯ рдХреЛ рдпрд╛рддреНрд░рд╛ рдХрд░рддреЗ рд╣реБрдП рджреЗрдЦ рд╕рдХрддреЗ рд╣реИрдВред</p>

                <ul className="mt-3 text-sm space-y-2">
                  <li>тАв рдкреИрдХреЗрдЯ = рдЫреЛрдЯреА рдЬрд╛рдирдХрд╛рд░реА рдХреА рдпреВрдирд┐рдЯ</li>
                  <li>тАв Router/Server = рдкреИрдХреЗрдЯ рдХреЛ рд╕рд╣реА рджрд┐рд╢рд╛ рджреЗрддрд╛ рд╣реИ</li>
                  <li>тАв DNS = рдирд╛рдо тЖТ IP рдХрд╛ рдЕрдиреБрд╡рд╛рдж</li>
                </ul>
              </div>

              {/* center: simulation canvas */}
              <div className="col-span-1 md:col-span-1">
                <div className="relative h-48 bg-gradient-to-b from-white to-sky-50 rounded-xl p-4 flex items-center justify-between">
                  {/* Laptop */}
                  <div className="flex flex-col items-center gap-2">
                    <FaLaptop className="text-3xl text-sky-500" />
                    <div className="text-xs">Laptop (Client)</div>
                  </div>

                  {/* path middle: router/server */}
                  <div className="flex-1 mx-4 flex items-center justify-center relative">
                    <div className="absolute left-0 right-0 top-6 h-0.5 bg-sky-200" />

                    <motion.div
                      animate={{ x: packetRunning ? `calc(100% * ${speed})` : 0 }}
                      transition={{ repeat: Infinity, duration: Math.max(1.6 / speed, 0.4), ease: "linear" }}
                      style={{ left: 0 }}
                      className="absolute w-6 h-6 rounded-full bg-sky-500 shadow-md flex items-center justify-center text-white"
                    >
                      <FaArrowRight />
                    </motion.div>

                    <div className="flex items-center gap-6 z-10">
                      <div className="flex flex-col items-center">
                        <FaCloud className="text-2xl text-sky-400" />
                        <div className="text-xs">Router</div>
                      </div>

                      <div className="flex flex-col items-center">
                        <FaServer className="text-2xl text-sky-400" />
                        <div className="text-xs">Server</div>
                      </div>
                    </div>
                  </div>

                  {/* Globe */}
                  <div className="flex flex-col items-center gap-2">
                    <FaGlobe className="text-3xl text-sky-500" />
                    <div className="text-xs">Internet (Destination)</div>
                  </div>
                </div>

                <div className="mt-3 text-xs text-gray-600">Note: рдпрд╣ рдПрдХ рд╕рд░рд▓ рд╡рд┐рдЬрд╝реБрдЕрд▓ рд╣реИ тАФ рдЕрд╕рд▓реА рдЗрдВрдЯрд░рдиреЗрдЯ рдореЗрдВ рдкреИрдХреЗрдЯ рдХрдИ рд░рд╛рд╕реНрддреЛрдВ рд╕реЗ рдЕрд▓рдЧ-рдЕрд▓рдЧ рддрд░реАрдХреЗ рд╕реЗ рдЬрд╛ рд╕рдХрддреЗ рд╣реИрдВред</div>
              </div>

              {/* right: step-by-step */}
              <div>
                <h4 className="font-semibold text-sky-700 mb-2">Step-by-step</h4>
                <ol className="list-decimal pl-5 text-sm space-y-2">
                  <li>рдЖрдк (Client) рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХрд╛ рдирд╛рдо рд▓рд┐рдЦрддреЗ рд╣реИрдВ (example.com)ред</li>
                  <li>DNS рдЙрд╕ рдирд╛рдо рдХреЛ IP рдореЗрдВ рдмрджрд▓рддрд╛ рд╣реИред</li>
                  <li>рдЖрдкрдХрд╛ рдмреНрд░рд╛рдЙрдЬрд╝рд░ рд╕рд░реНрд╡рд░ рд╕реЗ рдХрдиреЗрдХреНрдЯ рд╣реЛрддрд╛ рд╣реИ рдФрд░ рдбреЗрдЯрд╛ рдХреЗ рдЫреЛрдЯреЗ рдкреИрдХреЗрдЯ рдорд╛рдБрдЧрддрд╛ рд╣реИред</li>
                  <li>рдкреИрдХреЗрдЯ рд╡рд┐рднрд┐рдиреНрди рд░рд╛рдЙрдЯрд░реЛрдВ рдХреЗ рдЬрд░рд┐рдП рдкрд╣реБрдБрдЪрддреЗ рд╣реИрдВ рдФрд░ рдорд┐рд▓рдХрд░ рдлрд╛рдЗрд▓ рдмрдирд╛рддреЗ рд╣реИрдВред</li>
                </ol>
              </div>
            </div>
          </div>
        </section>

        {/* Detailed Concepts */}
        <section className="mb-6">
          <div className="bg-white rounded-2xl p-6 shadow-md">
            <h3 className="text-lg font-bold text-sky-700 mb-3">Deep Dive тАФ рдЖрд╕рд╛рди рднрд╛рд╖рд╛ рдореЗрдВ</h3>

            <div className="space-y-4 text-sm leading-relaxed">
              <div>
                <h4 className="font-semibold">IP Address тАФ рдХреМрди рдХрд╣рд╛рдБ рд░рд╣рддрд╛ рд╣реИ</h4>
                <p>
                  рд╣рд░ рдбрд┐рд╡рд╛рдЗрд╕ рдХреЛ рдПрдХ IP Address рдорд┐рд▓рддрд╛ рд╣реИ тАФ рдЬреИрд╕реЗ рдШрд░ рдХрд╛ рдкрддрд╛ред рдпрд╣ рдмрддрд╛рддрд╛ рд╣реИ рдХрд┐ рдкреИрдХреЗрдЯ рдХреЛ рдХрд╣рд╛рдБ рднреЗрдЬрдирд╛ рд╣реИред
                </p>
              </div>

              <div>
                <h4 className="font-semibold">DNS тАФ рдлреЛрдирдмреБрдХ</h4>
                <p>
                  DNS рдирд╛рдореЛрдВ рдХреЛ IP рдореЗрдВ рдмрджрд▓рддрд╛ рд╣реИ рддрд╛рдХрд┐ рдХрдВрдкреНрдпреВрдЯрд░ рдпрд╣ рд╕рдордЭ рд╕рдХреЗ рдХрд┐ рдХрд┐рд╕ рд╕рд░реНрд╡рд░ рд╕реЗ рдЬреБрдбрд╝рдирд╛ рд╣реИред рдЖрдк рдирд╛рдо рдпрд╛рдж рд░рдЦрдирд╛ рдкрдврд╝рддреЗ рд╣реИрдВ, рдорд╢реАрдиреЗрдВ рдирдВрдмрд░ рдкрд╕рдВрдж рдХрд░рддреА рд╣реИрдВред
                </p>
              </div>

              <div>
                <h4 className="font-semibold">Packets тАФ рдЫреЛрдЯреА-рдЫреЛрдЯреА рдЪрд┐рдЯреНрдард┐рдпрд╛рдБ</h4>
                <p>
                  рдмрдбрд╝реА рдлрд╝рд╛рдЗрд▓реЛрдВ рдХреЛ рдЫреЛрдЯреЗ рдкреИрдХреЗрдЯреНрд╕ рдореЗрдВ рдмрд╛рдВрдЯрд╛ рдЬрд╛рддрд╛ рд╣реИ тАФ рдпрд╣ рддреЗрдЬрд╝ рдФрд░ рднрд░реЛрд╕реЗрдордВрдж рд╣реЛрддрд╛ рд╣реИред рдпрджрд┐ рдХреЛрдИ рдкреИрдХреЗрдЯ рдЦреЛ рдЬрд╛рдП рддреЛ рдХреЗрд╡рд▓ рд╡реЛ рд╣реА рджреЛрдмрд╛рд░рд╛ рдорд╛рдБрдЧрд╛ рдЬрд╛рддрд╛ рд╣реИред
                </p>
              </div>

              <div>
                <h4 className="font-semibold">ISP тАФ рдЖрдкрдХрд╛ рдЗрдВрдЯрд░рдиреЗрдЯ рджреЛрд╕реНрдд</h4>
                <p>ISP (Internet Service Provider) рд╡рд╣ рдХрдВрдкрдиреА рд╣реИ рдЬреЛ рдЖрдкрдХреЛ рдЗрдВрдЯрд░рдиреЗрдЯ рддрдХ рдкрд╣реБрдБрдЪ рджреЗрддреА рд╣реИ тАФ рдЬреИрд╕реЗ рдЖрдкрдХреЗ рд╢рд╣рд░ рдХреА рд▓реЛрдХрд▓ рдкрд░рд┐рд╡рд╣рди рд╕реЗрд╡рд╛ред</p>
              </div>

              <div>
                <h4 className="font-semibold">Latency рдФрд░ Bandwidth</h4>
                <p>
                  Latency = рдХрд┐рддрдиреА рджреЗрд░ рд▓рдЧрддреА рд╣реИ; Bandwidth = рдХрд┐рддрдиреА рдмрдбрд╝реА рдЪреАрдЬрд╝ рдПрдХ рдмрд╛рд░ рдореЗрдВ рдЬрд╛ рд╕рдХрддреА рд╣реИред
                  рдХрд▓реНрдкрдирд╛ рдХрд░реЗрдВ: Latency рдПрдХ рд╕рдиреНрджреЗрд╢ рдХреЗ рд▓рд┐рдП рдЯреНрд░реИрдлрд┐рдХ рд▓рд╛рдЗрдЯ рд╣реИ, рдФрд░ Bandwidth рдПрдХ рд╕рдбрд╝рдХ рдХреА рдЪреМрдбрд╝рд╛рдИ рд╣реИред
                </p>
              </div>
            </div>
          </div>
        </section>

        {/* Real Life Examples */}
        <section className="mb-6">
          <div className="bg-white rounded-2xl p-6 shadow-lg">
            <h3 className="text-lg font-bold text-sky-700 mb-3">Real-life Examples</h3>
            <ul className="list-disc pl-5 space-y-2 text-sm">
              <li>
                <strong>Video Streaming:</strong> рд╡реАрдбрд┐рдпреЛ рдЫреЛрдЯреЗ рдкреИрдХреЗрдЯреНрд╕ рдореЗрдВ рдЖрддрд╛ рд╣реИ рдФрд░ рдЖрдкрдХреЗ рдкреНрд▓реЗрдпрд░ рдЙрдиреНрд╣реЗрдВ рдЬреЛрдбрд╝рддрд╛ рд╣реИ тАФ рдпрд╣реА рдХрд╛рд░рдг рд╣реИ рдХрд┐ рдХрднреА-рдХрднреА рдмрдлрд╝рд░рд┐рдВрдЧ рд╣реЛрддрд╛ рд╣реИред
              </li>
              <li>
                <strong>Email:</strong> рдЖрдкрдХрд╛ рдИрдореЗрд▓ рдХрдИ рд╕рд░реНрд╡рд░реЛрдВ рдХреЗ рдЬрд░рд┐рдП рдЬрд╛рддрд╛ рд╣реИ рдФрд░ рдЫреЛрдЯреЗ рд╣рд┐рд╕реНрд╕реЛрдВ рдореЗрдВ рднреЗрдЬрд╛ рдЬрд╛рддрд╛ рд╣реИред
              </li>
              <li>
                <strong>Online Game:</strong> рдХрдо latency рдЪрд╛рд╣рд┐рдП тАФ рдЦрд┐рд▓рд╛рдбрд╝реА рдХреА рд╣рд░ рдЪрд╛рд▓ рддреБрд░рдВрдд рдкрд╣реБрдБрдЪреЗ рдпрд╣ реЫрд░реВрд░реА рд╣реИред
              </li>
            </ul>
          </div>
        </section>

        {/* Interactive Glossary */}
        <section className="mb-6">
          <div className="bg-white rounded-2xl p-6 shadow-md">
            <div className="flex items-center justify-between">
              <h3 className="text-lg font-bold text-sky-700">Glossary</h3>
              <button
                onClick={toggleGlossary}
                className="text-sm inline-flex items-center gap-2 px-3 py-2 bg-sky-50 rounded-lg"
              >
                <FaInfoCircle /> {showGlossary ? "Hide" : "Show"}
              </button>
            </div>

            {showGlossary && (
              <div className="mt-4 grid grid-cols-1 md:grid-cols-2 gap-3">
                {glossary.map((g) => (
                  <div key={g.term} className="p-4 bg-sky-50 rounded-lg">
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="font-semibold">{g.term}</div>
                        <div className="text-xs text-gray-600">{g.short}</div>
                      </div>
                      <button
                        onClick={() => setActiveTerm(activeTerm === g.term ? null : g.term)}
                        className="text-sky-600 text-xs"
                      >
                        {activeTerm === g.term ? "Hide" : "Read"}
                      </button>
                    </div>

                    {activeTerm === g.term && <p className="mt-2 text-sm text-gray-700">{g.long}</p>}
                  </div>
                ))}
              </div>
            )}
          </div>
        </section>

        {/* Mini Quiz */}
        <section className="mb-10">
          <div className="bg-white rounded-2xl p-6 shadow-lg">
            <h3 className="text-lg font-bold text-sky-700 mb-3">Mini Quiz тАФ рдкрд░рдЦреЗрдВ рдЖрдкрдиреЗ рдХреНрдпрд╛ рд╕реАрдЦрд╛</h3>
            <div className="text-sm">
              <p className="mb-3">рдкреНрд░рд╢реНрди: IP Address рдХрд┐рд╕рд╕реЗ рдорд┐рд▓рддрд╛-рдЬреБрд▓рддрд╛ рд╣реИ?</p>
              <div className="flex flex-col gap-2">
                <label className={`p-3 rounded-lg border ${quizAnswer === "a" ? "border-sky-600 bg-sky-50" : "border-gray-200"}`}>
                  <input type="radio" name="q1" value="a" onChange={() => setQuizAnswer("a")} /> a) рдХрд┐рд╕реА рд╡реНрдпрдХреНрддрд┐ рдХрд╛ рдирд╛рдо
                </label>
                <label className={`p-3 rounded-lg border ${quizAnswer === "b" ? "border-sky-600 bg-sky-50" : "border-gray-200"}`}>
                  <input type="radio" name="q1" value="b" onChange={() => setQuizAnswer("b")} /> b) рдШрд░ рдХрд╛ рдкрддрд╛ (location)
                </label>
                <label className={`p-3 rounded-lg border ${quizAnswer === "c" ? "border-sky-600 bg-sky-50" : "border-gray-200"}`}>
                  <input type="radio" name="q1" value="c" onChange={() => setQuizAnswer("c")} /> c) рдПрдХ рдЧрд╛рдирд╛
                </label>
              </div>

              <div className="mt-4 flex items-center gap-2">
                <button onClick={submitQuiz} className="px-4 py-2 bg-sky-600 text-white rounded-lg">Submit</button>
                <button onClick={() => { setQuizAnswer(null); setQuizResult(null); }} className="px-4 py-2 bg-sky-50 rounded-lg">Reset</button>
              </div>

              {quizResult && <div className="mt-3 text-sm font-semibold text-sky-700">{quizResult}</div>}
            </div>
          </div>
        </section>

        {/* Footer / Next steps */}
        <footer className="py-6 text-center text-sm text-gray-600">
          <div>рдЕрджреНрднреБрдд тАФ рдЖрдкрдиреЗ "What is the Internet?" рдХрд╛ рдкрд╣рд▓рд╛ рдЕрдзреНрдпрд╛рдп рдкреВрд░рд╛ рдХрд┐рдпрд╛!</div>
          <div className="mt-2">рдЕрдЧрд▓рд╛: Module 1 тЖТ How Information Travels</div>
        </footer>
      </div>
    </div>
  );
}
